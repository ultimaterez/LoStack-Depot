services:
  mastodon-db:
    restart: unless-stopped
    container_name: mastodon-db
    image: postgres:14-alpine
    networks:
      - traefik_network
    shm_size: 256mb
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    volumes:
      - ${APPDATA_DIR}/mastodon/db:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
    labels:
    - homepage.name=Mastodon Postgres DB
    - homepage.group=Databases
    - homepage.icon=postgres
    - homepage.description=Federated Social Media Platform
    - lostack.autostart=true
    - lostack.group=mastodon
    - lostack.enable=true

  mastodon-redis:
    restart: unless-stopped
    container_name: mastodon-redis
    image: redis:7-alpine
    networks:
      - traefik_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ${APPDATA_DIR}/mastodon/redis:/data
    labels:
    - homepage.name=Mastodon Redis
    - homepage.group=Redis
    - homepage.icon=redis
    - homepage.description=Federated Social Media Platform
    - lostack.autostart=true
    - lostack.group=mastodon
    - lostack.enable=true
    
  mastodon-web:
    image: ghcr.io/mastodon/mastodon #:v4.3.3
    container_name: mastodon-web
    restart: unless-stopped
    env_file: ./.env
    command: bundle exec puma -C config/puma.rb
    healthcheck:
      test: ['CMD-SHELL',"curl -s --noproxy localhost localhost:3000/health | grep -q 'OK' || exit 1"]
    ports:
      - '3008:3000'
    networks:
      - general_network
      - mastodon_internal
    dns: 10.0.1.1
    depends_on:
      - mastodon-db
      - mastodon-redis
      - mastodon-es
    volumes:
      - /srv/mastodon/public/system:/mastodon/public/system

  mastodon-streaming:
    image: ghcr.io/mastodon/mastodon-streaming #:v4.3.3
    container_name: mastodon-streaming
    restart: unless-stopped
    env_file: ./mastodon.env
    command: node ./streaming/index.js
    healthcheck:
      test: ['CMD-SHELL', "curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1"]
#    ports:
#      - '4008:4000'
    networks:
      - general_network
      - mastodon_internal
    dns: 10.0.1.1
    depends_on:
      - mastodon-db
      - mastodon-redis

  mastodon-sidekiq:
    image: ghcr.io/mastodon/mastodon #:v4.3.3
    container_name: mastodon-sidekiq
    restart: unless-stopped
    env_file: ./mastodon.env
    networks:
      - mastodon_internal
      - general_network
    dns: 10.0.1.1
    command: bundle exec sidekiq
    depends_on:
      - mastodon-db
      - mastodon-redis
    volumes:
      - /srv/mastodon/public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
  
  mastodon-es:
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.28
    container_name: mastodon-es
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true"
      - "xpack.license.self_generated.type=basic"
      - "xpack.security.enabled=false"
      - "xpack.watcher.enabled=false"
      - "xpack.graph.enabled=false"
      - "xpack.ml.enabled=false"
      - "bootstrap.memory_lock=true"
      - "cluster.name=es-mastodon"
      - "discovery.type=single-node"
      - "thread_pool.write.queue_size=1000"
    networks:
      - general_network
      - mastodon_internal
    dns: 10.0.1.1
    healthcheck:
       test: ["CMD-SHELL", "curl --silent --fail 10.0.1.200:9200/_cluster/health || exit 1"]
    volumes:
    # Data should be stored on a bound volume for I/O based on documentation
       - es01:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - '9200:9200' # 9200 needs to be exposed to avoid geopip errors. Maybe something I could route through the proxy?

volumes:
  es01:
    driver: local
      
networks:
  general_network:
    driver: bridge
    name: general_network
    external: true
  mastodon_internal:
    driver: bridge
    name: mastodon_internal
    internal: true
